module EquationSystems where

import MatrixOps

solveEquations :: (Num a, Fractional a) => [[a]] -> [a] -> [a]

-- Solved equations of the form AX = B
--  where the A is the coefficient matrix,
--        X is [x, y, z, ...]
--        B is the constants matrix
solveEquations a b = [ determinant (replaceCols i a b) / det | i <- [0..(length a)-1] ]
 where det = determinant a


replaceCols :: (Num a, Fractional a) => Int -> [[a]] -> [a] -> [[a]]

replaceCols _ [] [] = []
replaceCols i (a:as) (b:bs) = (left ++ [b] ++  (tail right)) : replaceCols i as bs
 where (left, right) = splitAt i a

main = print $ solveEquations [[12.12, -1.512, 121/24], [-1, -90.15, 121], [71.3,32156, 1]] [0, 1243, 1]
